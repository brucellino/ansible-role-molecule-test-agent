{
  "variables": {
    "ansible_host": "default",
    "ansible_connection": "docker"
  },
  "builders": [
    {
      "type": "docker",
      "image": "quay.io/uefadevops/jenkins-agent-jnlp",
      "name": "container",
      "commit": "true",
      "privileged": "true",
      "run_command": [ "-d", "-i", "-t", "--name", "{{user `ansible_host`}}", "{{.Image}}", "/bin/bash" ],
      "name": "docker"
    },
    {
      "type": "amazon-ebs",
      "ssh_username": "ubuntu",
      "profile": "default",
      "region": "eu-central-1",
      "ami_name": "molecule-{{ timestamp }}",
      "instance_type": "t2.medium",
      "source_ami_filter": {
        "filters": {
          "virtualization-type": "hvm",
          "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
          "root-device-type": "ebs"
        },
        "owners": ["099720109477"],
        "most_recent": true
      },
      "run_tags": [
        {"Name": "packer-builder"},
        {"Workload": "Molecule"}
      ],
      "name": "ec2"
    }
  ],
  "provisioners": [
    {
      "type": "ansible",
      "playbook_file": "playbook.yml",
      "user": "root",
      "ansible_env_vars": [
        "ANSIBLE_ROLES_PATH=$PWD/../../",
        "ANSIBLE_STDOUT_CALLBACK=yaml"
      ],
      "extra_arguments": [
        "-e ansible_host={{ user `ansible_host` }}",
        "-e ansible_connection=docker"
      ],
      "only": ["docker"]
    },
    {
      "type": "shell",
      "inline": [
        "sudo apt-get update -qq",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get install -y python"
      ],
      "only": ["ec2"]
    },
    {
      "type": "ansible",
      "playbook_file": "playbook-ec2.yml",
      "user": "ubuntu",
      "ansible_env_vars": [
        "ANSIBLE_ROLES_PATH=$PWD/../../",
        "ANSIBLE_STDOUT_CALLBACK=yaml",
        "ANSIBLE_REMOTE_USER=ubuntu"
      ],
      "only": ["ec2"]
    }
  ],
  "post-processors": [
    {
      "type": "docker-tag",
      "repository": "quay.io/uefadevops/molecule-build-agent",
      "tag": "latest",
      "only": ["docker"]
    },
    {
      "type": "manifest",
      "output": "manifest.json"
    }
  ]
}
